@model NutraBioticsBackend.Models.Contact

@{
    ViewBag.Title = "Crear Contacto";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contacto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <div class="form-group">
            @Html.Label("Crear nuevo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("nuevoContacto", false, htmlAttributes: new { @id = "newContact"})
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Numero Medico", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PerConID, new { htmlAttributes = new { @id = "perid", @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Medico", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PerConID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PerConID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShipToId, "Paciente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ShipToId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShipToId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PagerNum, "Cedula Rep.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model=> model.PagerNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PagerNum, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-Nutra" />
            </div>
        </div>
    </div>
   

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>



<script type="text/javascript">
    $(document).ready(function () {
    $("#perid").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("PerConIDAutoComplete")',
                type: "POST",
                dataType: "json",
                data: { Prefix: parseInt(request.term), __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val() },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.PerConID, value: item.PerConID };
                    }))
                }
            })
        },
        messages: {
            noResults: "",
            results: function (resultsCount) { }
        }
    });
})


$(document).ready(function () {
    $("#perid").focusout(function () {
        $.ajax({
            url: '@Url.Action("SelectPerConIDFromTextBox")',
            dataType: 'json',
            type: "POST",
            data: {
                PerConId: $("#perid").val(), __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()
            },
            success: function (perconid) {
                if (perconid.PerConID == 999) {
                    alert("No Encontrado");
                }
                else
                {
                    $("#PerConID").prop("value", perconid.PerConID);
                }
            },
        });
        return false;
    })
    })


$(document).ready(function () {
    $("#PerConID").change(function () {
        $("#perid").empty();
        $("#Name").empty();
        //$("#Email").prop("value", percon.Email);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetPersonContactData")',
            dataType: 'json',
            data: { PerConID: $("#PerConID").val(), __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()},
            success: function (perconid) {
                $.each(perconid, function (i, percon) {
                    $("#perid").prop("value", percon.PerConID);
                    $("#Name").prop("value", percon.Name);
                });
            },
        });
        return false;
    })
    })

    $(document).ready(function () {
        $("#PerConID").focusout(function () {
            $("#Name").empty;
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetContactName")',
            dataType: 'json',
            data: { PerConID: $("#PerConID").val(), __RequestVerificationToken: $('input[name=__RequestVerificationToken]').val()},
            success: function (name) {
                $("#Name").prop("value", name);
            },
        });
        return false;
    })
    })


    $(document).ready(function () {
        $("#newContact").change(function (){
            if ($("#newContact").prop("checked") == true){
                $("#PerConID").prop('disabled', true);
                $("#perid").prop('disabled', true);
                //$("#PerConID").prop('value', 9999);
            }
            else
            {
                $("#PerConID").prop('disabled', false);
                $("#perid").prop('disabled', false);
                $("#Name").prop('disabled', false);
                $("#Email").prop('disabled', false);
            }
            return false;
        })
    })





    </script>



}
