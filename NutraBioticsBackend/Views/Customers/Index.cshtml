@model IEnumerable<NutraBioticsBackend.Models.Customer>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

<h2>Clientes</h2>

@*<p>
        @Html.ActionLink("Nuevo ShipTo", "Create")
    </p>*@

<hr />
@*<p>
    @Html.DropDownList("CustomerId", new SelectList(Model.GetAll(), "Id", "Name"), new { onchange = "this.form.submit();" })%><input type="submit" name="btnSubmit" value="Submit" />
</p>*@
<hr />

@Html.Grid(Model).Named("CustomersGrid").Columns(columns =>
{
    columns.Add(c => c.Company).Titled("Compañia").SetWidth(110).Sortable(true);

    columns.Add(c => c.CustomerId).Titled("ID").SetWidth(110).Sortable(true);

    columns.Add(c => c.CustNum).Titled("Numero Cliente").SetWidth(110);

    columns.Add(c => c.Names).Titled("Nombres").Filterable(true).SetInitialFilter(GridMvc.Filtering.GridFilterType.Contains, "Ventas POS");

    columns.Add(c => c.ShipViaCode).Titled("Codigo Forma de Envio").SetWidth(110);

    columns.Add(c => c.Country).Titled("Pais").SetWidth(110);

    columns.Add(c => c.State).Titled("Departamento").SetWidth(110);

    columns.Add(c => c.City).Titled("Ciudad").SetWidth(110);

    columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
        .RenderValueAs(o => @Html.ActionLink("Detalle", "Details", new { id = o.CustomerId }, new { @class = "btn btn-Nutra" }));


}).WithPaging(20)


@section Scripts {
@Scripts.Render("~/bundles/jqueryval")

@*<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>*@
<script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>



    }