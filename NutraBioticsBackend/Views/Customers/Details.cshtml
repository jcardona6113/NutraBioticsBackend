@model NutraBioticsBackend.Models.CustomerView
@using GridMvc.Html

@{
    ViewBag.Title = "Detalle";
}

<h2>@Html.DisplayFor(model => model.Names)</h2>

<div>
    <h4>Detalle</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model)
        </dt>

        <dt>
            @Html.DisplayNameFor(model => model.CustId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CustNum)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustNum)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Company)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Company)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ResaleId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ResaleId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TerritoryId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TerritoryId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShipViaCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShipViaCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhoneNum)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNum)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Names)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Names)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastNames)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastNames)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreditHold)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreditHold)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TermsCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TermsCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Terms)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Terms)
        </dd>

    </dl>
</div>



<div>

    <h3>Sucursales</h3>

@Html.ActionLink("Crear ShipTo", "CreateShipTo",
                        new { Id = Model.CustomerId }, new { @class = "btn btn-Nutra" })

@if (Model.ShipTos.Count > 0)
{


    @Html.Grid(Model.ShipTos).Named("ShipToesGrid").Columns(columns =>
{
    columns.Add(c => c.ShipToNum).Titled("ShipToNum").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(c => c.ShipToName).Titled("Nombre").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(c => c.Country).Titled("Country").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(c => c.State).Titled("State").SetWidth(110).Filterable(true).Sortable(true);

    columns.Add(c => c.City).Titled("City").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(c => c.Address).Titled("Address").SetWidth(110).Sortable(true).Filterable(true);


    columns.Add().Encoded(false).Sanitized(false).SetWidth(5)
    .RenderValueAs(o => @Html.ActionLink("Editar", "EditShipTo", new { id = o.ShipToId }, new { @class = "btn btn-Nutra" }));

    columns.Add().Encoded(false).Sanitized(false).SetWidth(5)
.RenderValueAs(o => @Html.ActionLink("Borrar", "DeleteShipTo", new { id = o.ShipToId }));


    //columns.Add(c => c.CustNum).Titled("Pais").SetWidth(110);
    //columns.Add(c => c.CustNum).Sortable(true);

    //columns.Add(c => c.CustNum).Titled("Departamento").SetWidth(110);
    //columns.Add(c => c.CustNum).Sortable(true);

    //columns.Add(c => c.CustNum).Titled("Ciudad").SetWidth(110);
    //columns.Add(c => c.CustNum).Sortable(true);

    //columns.Add(c => c.CustNum).Titled("Direccion").SetWidth(110);
    //columns.Add(c => c.CustNum).Sortable(true);
}).WithPaging(20)

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>


    }
}
else
{
        <h4> No se encontraron sucursales </h4>
    }

</div>

<p>
    @Html.ActionLink("Regresar", "Index")
</p>
