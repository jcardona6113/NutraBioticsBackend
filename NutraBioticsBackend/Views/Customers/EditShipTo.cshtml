@model NutraBioticsBackend.Models.ShipToView
@using GridMvc.Html

@{
    ViewBag.Title = "Editar Paciente";
}

<h2>@Html.DisplayFor(model => model.ShipToName)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ShipToId)


        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "Cliente POS", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ShipToNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShipToNum, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipToNum, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ShipToName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShipToName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShipToName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>


            <hr />

            <h3>Medicos</h3>

            @Html.ActionLink("Crear Medico", "CreateContact",
                        new { Id = Model.ShipToId }, new { @class = "btn btn-Nutra" })
   
            </div>

        <div class="col-md-6">


            <div class="form-group">
                @Html.LabelFor(model => model.TerritoryEpicorId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TerritoryEpicorId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TerritoryEpicorId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address3, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNum, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-Nutra" />
                </div>
            </div>

         </div>
            </div>


        <div class="form-group">

            @if (Model.Contacts.Count > 0)
            {

          @Html.Grid(Model.Contacts).Named("ContactsGrid").Columns(columns =>
       {
           columns.Add(c => c.ConNum).Titled("Numero Medico").SetWidth(110).Sortable(true).Filterable(true);

           columns.Add(c => c.Name).Titled("Nombre").SetWidth(110).Sortable(true).Filterable(true);

           columns.Add(c => c.SincronizadoEpicor).Encoded(false).Sanitized(false).SetWidth(30).Titled("Sincronizado Epicor").Filterable(true).RenderValueAs(o => Html.CheckBox("checked", o.SincronizadoEpicor, new { @disabled = true }));


           columns.Add().Encoded(false).Sanitized(false).SetWidth(5)
           .RenderValueAs(o => @Html.ActionLink("Editar", "EditContact", new { id = o.ContactId }, new { @class = "btn btn-Nutra" }));

           columns.Add().Encoded(false).Sanitized(false).SetWidth(5)
       .RenderValueAs(o => @Html.ActionLink("Borrar", "DeleteContact", new { id = o.ContactId }));

       }).WithPaging(20)

              
            }

            <p>
                @Html.ActionLink("Regresar", "Details" + "/" + Model.CustomerId)
            </p>
        </div>

  

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>
}


