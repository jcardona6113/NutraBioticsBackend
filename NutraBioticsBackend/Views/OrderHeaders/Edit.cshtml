@model NutraBioticsBackend.Models.OrderHeader

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Orden</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SalesOrderHeaderId)
        <div class="col-md-6">
            @*<div class="form-group">
                @Html.LabelFor(model => model.SalesOrderHeaderInterId, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrderHeaderInterId, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.SalesOrderHeaderInterId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.UserId, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "hidden" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.VendorId, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VendorId, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>          

            @*<div class="form-group">
                @Html.LabelFor(model => model.CustId, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CustId, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.CustId, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.CreditHold, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CreditHold)
                        @Html.ValidationMessageFor(model => model.CreditHold, "", new { @class = "text-danger", @readonly = "readonly" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date' id='datepicker' style="width:280px">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })

                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.NeedByDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date' id='datepicker2' style="width:280px">
                        @Html.EditorFor(model => model.NeedByDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TermsCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TermsCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.TermsCode, "", new { @class = "text-danger" })
                </div>
            </div>
    </div>
        <div class="col-md-6">

            <div class="form-group">
                @Html.Label("ShipToNum", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShipToNum, new { htmlAttributes = new { @id = "cedulaSH", @class = "form-control" } })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ShipToId, "ShipToId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ShipToId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShipToId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Contacto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ContactId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactId, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.ConNum, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConNum, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.ConNum, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.SalesCategory, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesCategory, new { htmlAttributes = new { @class = "hidden", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.SalesCategory, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Observations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxAmt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TaxAmt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaxAmt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TotalLine, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TotalLine, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TotalLine, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.SincronizadoEpicor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SincronizadoEpicor)
                        @Html.ValidationMessageFor(model => model.SincronizadoEpicor, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.PriceListId, "Lista Precio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PriceListId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PriceListId, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.ShipToNum, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShipToNum, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.ShipToNum, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.RowMod, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RowMod, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.RowMod, "", new { @class = "text-danger" })
                </div>
            </div>*@
        </div>       
            <div class="form-group">
                <div class="col-md-offset-0col-md-10">
                    
                    <input type="submit" value="Guardar" class="btn btn-success" />
        
                    @Html.ActionLink("Agregar Producto", "AddProductEdit", "OrderHeaders", null, new { @id = "SubmitAddProduct", @class = "btn btn-warning" })
                </div>
            </div>
        </div>
}

<div>    
    @Html.ActionLink("Regresar", "Index")
    @if (Model.OrderDetails == null)
    {
        <h5>La orden no tiene detalle</h5>
    }
    else
    {
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetailList[0].PartNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetailList[0].PartDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetailList[0].Reference)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetailList[0].OrderQty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetailList[0].UnitPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OrderDetailList[0].Total)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.OrderDetailList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PartNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PartDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reference)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderQty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UnitPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Total)
                    </td>
                    <td>
                        @Html.ActionLink("Borrar", "DeleteProductOrderDtl", new { id = item.SalesOrderHeaderId,idDtl= item.SalesOrderDetaliId },new {@class = "btn btn-danger" })
                    </td>
                </tr>
            }
            <tr>
                <td colspan="5" align="right">
                    <strong>Total Orden</strong>
                </td>
                <td>
                    <strong>@Html.DisplayFor(modelItem => Model.TotalLine)</strong>
                </td>
            </tr>

        </table>
               
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

        <script type="text/javascript">
            {
                $("#CreditHold").prop('disabled', true);
                $("#SincronizadoEpicor").prop('disabled', true);
                $("#ShipToId").focusout(function () {
                    $("#ContactId").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetContactList")',
                        dataType: 'json',
                        data: { ShipToId: $("#ShipToId").val() },
                        success: function (contacts) {
                            $.each(contacts, function (i, contact) {
                                $("#ContactId").append('<option value="'
                                    + contact.ContactId + '">'
                                    + contact.Name + '</option>');
                            });
                        },
                    });
                });
            };
             $('#SubmitAddProduct').click(function () {
                    var PriceListId = $('#PriceListId').val();
                    var SalesOrderHeaderId = $('#SalesOrderHeaderId').val();
                    var CustomerId = $('#CustomerId').val();
                    var ShipToId = $('#ShipToId').val();
                    var ContactId = $('#ContactId').val();
                    var Date = $('#Date').val();
                    var NeedByDate = $('#NeedByDate').val();
                    var Observations = $('#Observations').val();
                    var Terms = $('#TermsCode').val();
                    if (PriceListId != null && CustomerId != null && ShipToId != null && ContactId != null && PriceListId != 0 && CustomerId != 0 && ShipToId != 0 && ContactId != 0) {
                        var path = '@Url.Content("~/OrderHeaders/AddProductEdit")' + "?PriceListId=" + PriceListId + "&SalesOrderHeaderId=" + SalesOrderHeaderId;
                        $(this).attr("href", path);
                    }
                    else
                    {
                        @*
                        var path = '@Url.Content("~/OrderHeaders/Edit/"+ SalesOrderHeaderId)'
                        $(this).attr("href", path);*@
                    }
                });


    $(document).ready(function () {
    $("#cedulaSH").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("EditAutoComplete")',
                type: "POST",
                dataType: "json",
                data: { CustomerId: $("#CustomerId").val(), Prefix: request.term },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.ShipToNum, value: item.ShipToNum };
                    }))
                }
            })
        },
        messages: {
            noResults: "", results: ""
        }
    });
             })


            $(document).ready(function () {
                $("#ShipToId").change(function () {
                    $("#cedulaSH").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetShipToeData")' ,
                        dataType: 'json',
                        data: { ShipToId: $("#ShipToId").val() },
                        success: function (shiptoes) {
                            $.each(shiptoes, function (i, shipto) {
                                $("#cedulaSH").prop("value", shipto.ShipToNum);
                            });
                        },
                    });
                    return false;
                })
            })


            $(document).ready(function () {
                $("#cedulaSH").focusout(function () {

                    $.ajax({
                        url: '@Url.Action("EditSelectShiptoeFromTextBox")',
                        dataType: 'json',
                        type: "POST",
                        data: { CustomerId: $("#CustomerId").val(), ShipToNum: $("#cedulaSH").val() },
                        success: function (shipto) {
                            if (shipto.ShipToNum == "999")
                            {
                                alert("No Encontrado");
                            }
                            else
                            {
                                $("#ShipToId").val(shipto.ShipToId);
                            }
                        },
                        });

                return false;
                })
            })
            
</script>



<script type="text/javascript">
             $(function () {
                 $('#datepicker').datetimepicker({ format: 'MM-DD-YYYY HH:mm:ss' });
             });
</script>


<script type="text/javascript">
             $(function () {
                 $('#datepicker2').datetimepicker({ format: 'MM-DD-YYYY HH:mm:ss' });
             });
</script>


}
