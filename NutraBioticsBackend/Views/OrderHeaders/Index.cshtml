@model IEnumerable<NutraBioticsBackend.Models.OrderHeader>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

<h2>Listado Ordenes</h2>

<p>
    @Html.ActionLink("Crear Orden", "Create")
</p>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })



@Html.Grid(Model).Named("OrdersGrid").Columns(columns =>
{
    columns.Add(o => o.OrderNum).Titled("Numero Orden").SetWidth(110).Sortable(true).Filterable(true);

    //columns.Add(o => o.CustId).Titled("ID Cliente").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.Customer.Names).Titled("Nombres").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.ShipToNum).Titled("ShipToNum").SetWidth(110).Filterable(true).Sortable(true);

    columns.Add(o => o.ShipTo.ShipToName).Titled("ShipToName").SetWidth(110).Sortable(true).Filterable(true);

    // columns.Add(o => o.Contact.ConNum).Titled("ConNum").SetWidth(110).Sortable(true).Filterable(true);

    //columns.Add(o => o.Contact.Name).Titled("Nombre Contacto").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.Date).Titled("Fecha").SetWidth(110).Sortable(true).Filterable(true);

    //columns.Add(o => o.NeedByDate).Titled("Fecha Necesidad").SetWidth(110).Sortable(true).Filterable(true);

    //columns.Add(o => o.TermsCode).Titled("Terminos").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.Observations).Titled("Observaciones").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.TaxAmt).Titled("Iva").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.Total).Titled("Total").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add(o => o.SincronizadoEpicor).Encoded(false).Sanitized(false).SetWidth(30).Titled("SincronizadoEpicor").Filterable(true).RenderValueAs(o => Html.CheckBox("checked", o.SincronizadoEpicor, new { @disabled = true }));

    columns.Add(o => o.ShipMent).Encoded(false).Sanitized(false).SetWidth(30).Titled("Embarcada").Filterable(true).RenderValueAs(o => Html.CheckBox("checked", o.ShipMent, new { @disabled = true }));

    columns.Add(o => o.Invoiced).Encoded(false).Sanitized(false).SetWidth(30).Titled("Facturada").Filterable(true).RenderValueAs(o => Html.CheckBox("checked", o.Invoiced, new { @disabled = true }));
    //columns.Add(o => o.User.FirstName).Titled("Usuario").SetWidth(110).Sortable(true).Filterable(true);

    columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
        .RenderValueAs(o => @Html.ActionLink("Editar", "Edit", new { id = o.SalesOrderHeaderId }, new { @class = "btn btn-Nutra" }));

    columns.Add().Encoded(false).Sanitized(false).SetWidth(30)
    .RenderValueAs(o => @Html.ActionLink("Borrar", "Delete", new { id = o.SalesOrderHeaderId }));


}).WithPaging(20)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
  @*<script src="@Url.Content("~/Scripts/jquery.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Scripts/gridmvc.min.js")" type="text/javascript"></script>

}





     