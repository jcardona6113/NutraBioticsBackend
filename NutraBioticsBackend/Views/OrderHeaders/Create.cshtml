@model NutraBioticsBackend.Models.NewOrderView

@{
    ViewBag.Title = "Create";
}

<h2>Crear Orden</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.SalesOrderHeaderId, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrderHeaderId, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.SalesOrderHeaderId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreditHold, "CreditHold", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CreditHold)
                        @Html.ValidationMessageFor(model => model.CreditHold, "", new { @disabled = true, @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date' id='FechaOrden' style="width:280px">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NeedByDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date' id='FechaNecesidad' style="width:280px">
                        @Html.EditorFor(model => model.NeedByDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.NeedByDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TermsCode, "TermsCode", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TermsCode, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", id = "TermsCode" } })
                    @Html.ValidationMessageFor(model => model.TermsCode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ShipToId, "ShipTo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ShipToId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShipToId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactId, "Contacto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ContactId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Observations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxAmt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TaxAmt, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaxAmt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SincronizadoEpicor, htmlAttributes: new { @readonly = "readonly", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SincronizadoEpicor)
                        @Html.ValidationMessageFor(model => model.SincronizadoEpicor, "", new { @disabled = true, @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PriceListId, "Lista Precio", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PriceListId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PriceListId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group2">

            @*<div class="form-group2">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.LabelFor(model => model.PartId, "Parte", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("PartId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PriceListId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group2">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.LabelFor(model => model.QTY, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QTY, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.QTY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group2">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group2">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-0 col-md-10">
                <input type="submit" value="Guardar" formmethod="post" class="btn btn-success" />
                @*@Html.ActionLink("Agregar Producto", "AddProduct", new { PriceListId = Model.PriceListId, SalesOrderHeaderId=Model.SalesOrderHeaderId, CustomerId=Model.CustomerId, ShipToId=Model.ShipToId, ContactId=Model.ContactId, Date=Model.Date, NeedByDate=Model.NeedByDate, Observations=Model.Observations })*@
                @Html.ActionLink("Agregar Producto", "AddProduct", "OrderHeaders", null, new { @id = "SubmitAddProduct", @class = "btn btn-warning" })
            </div>
        </div>
    </div>

}
<!-- En la vista en lugar del ActionLink un <a /> normal -->

<div>
    @Html.ActionLink("Regresar a la lista", "Index")
</div>
<h4>Detalle Orden</h4>
@if (Model.OrderDetails == null)
{
    <h5>La orden no tiene detalle</h5>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails[0].PartNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails[0].PartDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails[0].Reference)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails[0].OrderQty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails[0].UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDetails[0].Total)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.OrderDetails)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PartNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PartDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reference)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderQty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Total)
                </td>
                <td>
                    @Html.ActionLink("Delete", "DeleteProduct", new { id = item.OrderDetailTmpId })
                </td>
            </tr>
        }
        <tr>
            <td colspan="5" align="right">
                <strong>Total Orden</strong>
            </td>
            <td>
                <strong>@Html.DisplayFor(modelItem => Model.TotalValue)</strong>
            </td>
        </tr>

    </table>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $("#CreditHold").prop('disabled', true);
    $("#SincronizadoEpicor").prop('disabled', true);
     $('#SubmitAddProduct').click(function () {
            var PriceListId = $('#PriceListId').val();
            var SalesOrderHeaderId = $('#SalesOrderHeaderId').val();
            var CustomerId = $('#CustomerId').val();
            var ShipToId = $('#ShipToId').val();
            var ContactId = $('#ContactId').val();
            var Date = $('#Date').val();
            var NeedByDate = $('#NeedByDate').val();
            var Observations = $('#Observations').val();
            var Terms = $('#TermsCode').val();
            if (PriceListId != null && CustomerId != null && ShipToId != null && ContactId != null && PriceListId != 0 && CustomerId != 0 && ShipToId != 0 && ContactId != 0) {
                var path = '@Url.Content("~/OrderHeaders/AddProduct")' + "?PriceListId=" + PriceListId + "&SalesOrderHeaderId=" + SalesOrderHeaderId + "&CustomerId=" + CustomerId + "&ShipToId=" + ShipToId + "&ContactId=" + ContactId + "&Date=" + Date + "&NeedByDate=" + NeedByDate + "&Observations=" + Observations + "&Terms=" + Terms;
                $(this).attr("href", path);
            }
            else
            {
                alert("verifique que haya seleccionado cliente, sucursal, contacto y lista de precio");
                var path = '@Url.Content("~/OrderHeaders/Create")'
                $(this).attr("href", path);
            }
        });
    @*$('#AddProdut').click(function() {
                $.ajax({
                    url: '@Url.Action("CreateProducto", "NewOrderView")',
                    type: 'POST',
                    cache: false,
                    data: formContainer.serialize(),
                    success: function(result) {
                        var modelStatus = $('.model-status');
                        if (result) modelStatus.text("Estado: Enviado con éxito");
                        else modelStatus.text("Estado: Enviado con error. Compruebe que ha rellenado todos los campos");
                    },
                    error: function(jqXHR, textStatus, error) {
                        $('.model-status').text("Estado: Error inesperado");
                    }
                });
            });*@
        $(document).ready(

            function ()
            {

                $("#CustomerId").change(function ()
                {
                            $("#ShipToId").empty();
                            $("#ContactId").empty();
                            $("#PriceListId").empty();
                            $("#PartId").empty();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetShipToesList")',
                                dataType: 'json',
                                data: { CustomerId: $("#CustomerId").val() },
                                success: function (shiptoes) {
                                    $.each(shiptoes, function (i, shipto) {
                                        $("#ShipToId").append('<option value="'
                                            + shipto.ShipToId + '">'
                                            + shipto.ShipToName + '</option>');
                                    });
                                },
                            });
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetCustomeList")',
                                dataType: 'json',
                                data: { CustomerId: $("#CustomerId").val() },
                                success: function (customers) {
                                    $.each(customers, function (i, customer) {
                                        $("#TermsCode").attr("value", customer.TermsCode);
                                        $("#CreditHold").prop('checked', customer.CreditHold);
                                        $("#CreditHold").prop('disabled', true);
                                        $("#SincronizadoEpicor").prop('disabled', true);
                                    });
                                },
                            });
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetContactList")',
                                dataType: 'json',
                                data: { ShipToId: $("#ShipToId").val() },
                                success: function (contacts) {
                                $.each(contacts, function (i, contact) {
                                    $("#ContactId").append('<option value="'
                                        + contact.ContactId + '">'
                                        + contact.Name + '</option>');
                                });
                                },
                            });
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetPriceList")',
                                dataType: 'json',
                                data: { CustomerId: $("#CustomerId").val() },
                                success: function (PriceList) {
                                    $.each(PriceList, function (i, priceList) {
                                        $("#PriceListId").append('<option value="'
                                            + priceList.PriceListId + '">'
                                            + priceList.ListDescription + '</option>');
                                });
                                },
                            });
                            @*$.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetPartlist")',
                                dataType: 'json',
                                data: { PriceListId: $("#PriceListId").val() },
                                success: function (Part) {
                                    $.each(Part, function (i, part) {
                                        $("#PartId").append('<option value="'
                                            + part.PartId + '">'
                                            + part.PartDescription + '</option>');
                                    });
                                },
                            });*@
                            return false;
                })
                $("#ShipToId").change(function ()
                {
                            $("#ContactId").empty();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetContactList")',
                                dataType: 'json',
                                data: { ShipToId: $("#ShipToId").val() },
                                success: function (contacts) {
                                    $.each(contacts, function (i, contact) {
                                        $("#ContactId").append('<option value="'
                                            + contact.ContactId + '">'
                                            + contact.Name + '</option>');
                                    });
                                },
                            });
                            return false;
                        })
                @*$("#PriceListId").change(function ()
                {
                        $("#PartId").empty();
                           $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetPartlist")',
                                dataType: 'json',
                                data: { PriceListId: $("#PriceListId").val() },
                                success: function (Part) {
                                    $.each(Part, function (i, part) {
                                        $("#PartId").append('<option value="'
                                            + part.PartId + '">'
                                            + part.PartDescription + '</option>');
                                    });
                                },
                            });
                            return false;
                        })
                $("#PartId").change(function ()
                {
                    $("#UnitPrice").empty();
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("GetProductPrice")',
                            dataType: 'json',
                            data: { PriceListId: $("#PriceListId").val(), PartId: $("#PartId").val() },
                            success: function (parts) {
                                $.each(parts, function (i, part) {
                                    $("#UnitPrice").attr("value", part.BasePrice);
                                    //$("#UnitPrice").prop('disabled', true);
                                });
                            },
                        });
                            return false;
                })*@

            }
        );
    </script>
    @*<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
        <script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script>*@
}
