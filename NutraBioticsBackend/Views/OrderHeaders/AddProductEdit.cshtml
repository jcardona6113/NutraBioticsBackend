@model NutraBioticsBackend.Models.AddproductEditView
@{
    ViewBag.Title = "AddProductEdit";
}

<h2>Adicionar Producto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OrderDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
                @Html.LabelFor(model => model.SalesOrderHeaderId, "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalesOrderHeaderId, new { htmlAttributes = new { @class = "hidden" } })
                    @Html.ValidationMessageFor(model => model.SalesOrderHeaderId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.PriceListId, htmlAttributes: new { @class = "control-label col-md-2", @visible = false })
            <div class="col-md-10">
                @Html.DropDownList("PriceListId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PriceListId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PartId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PartId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PartId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderQty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderQty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-0 col-md-10">
                <input type="submit" value="Add" class="btn btn-default" />
                @Html.ActionLink("Regresar", "Create")
            </div>
        </div>
    </div>
}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
    $(document).ready
    (
        function () {
            $("#PartId").change(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetProductPrice")',
                    dataType: 'json',
                    data: { PriceListId: $("#PriceListId").val(), PartId: $("#PartId").val() },
                    success: function (parts) {
                        $.each(parts, function (i, part) {
                            $("#UnitPrice").attr("value", part.BasePrice);
                            //$("#UnitPrice").prop('disabled', true);
                        });
                    },
                });
            })
        }
        )
    </script>
}





